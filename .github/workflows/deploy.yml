name: Deploy to Amazon ECS

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Docker image tag"
        required: true
        default: "latest" # Optional default image tag

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: rust-api-starter
          IMAGE_TAG: ${{ github.event.inputs.image_tag }}
          AWS_REGION: ${{ secrets.AWS_REGION }}d
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: rust-api-starter-container
          image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: rust-api-starter-service
          cluster: rust-api-starter-cluster
          task-definition: ${{ steps.task-def.outputs.task-definition }}
